block $, end, elseif, until, then, do, while, repeat, if, for, function, local, Name, (, return, break, else
args [, ., :, (, String, {, +, -, *, /, ^, %, .., <, <=, >, >=, ==, ~=, and, or, ], ,, nil, false, true, Number, ..., function, Name, not, #, then, do, ), while, repeat, if, for, local, ;, return, break, $, end, elseif, until, else, }
args_s )
binop nil, false, true, Number, String, ..., function, {, Name, (, -, not, #
chunk $, end, elseif, until, then, do, while, repeat, if, for, function, local, Name, (, return, break, else
chunk_c return, break, $, end, elseif, until, then, do, while, repeat, if, for, function, local, Name, (, else
chunk_s1 do, while, repeat, if, for, function, local, Name, (, return, break, $, end, elseif, until, then, else
chunk_s2 $, end, elseif, until, then, do, while, repeat, if, for, function, local, Name, (, return, break, else
exp ], ,, nil, false, true, Number, String, ..., function, {, Name, (, -, not, #, then, do, ), +, *, /, ^, %, .., <, <=, >, >=, ==, ~=, and, or, while, repeat, if, for, local, ;, return, break, $, end, elseif, until, else, }
exp_1 ], ,, nil, false, true, Number, String, ..., function, {, Name, (, -, not, #, then, do, ), +, *, /, ^, %, .., <, <=, >, >=, ==, ~=, and, or, while, repeat, if, for, local, ;, return, break, $, end, elseif, until, else, }
explist do, while, repeat, if, for, function, local, Name, (, ;, ), return, break, $, end, elseif, until, then, else
explist_c nil, false, true, Number, String, ..., function, {, Name, (, -, not, #
field ,, ;, }
fieldlist }
fieldlist_c ,, ;, }
fieldlist_s }
fieldsep [, Name, nil, false, true, Number, String, ..., function, {, (, -, not, #, }
funcbody do, while, repeat, if, for, function, local, Name, (, ;, +, -, *, /, ^, %, .., <, <=, >, >=, ==, ~=, and, or, return, break, $, end, elseif, until, then, else, ], ,, nil, false, true, Number, String, ..., {, not, #, ), }
funcbody_s )
funcname (
funcname_c :, (
funcname_s (
functioncall do, while, repeat, if, for, function, local, Name, (, ;, return, break, $, end, elseif, until, then, else
functioncall_prefixexp do, while, repeat, if, for, function, local, Name, (, ;, return, break, $, end, elseif, until, then, else
functiondef +, -, *, /, ^, %, .., <, <=, >, >=, ==, ~=, and, or, ], ,, nil, false, true, Number, String, ..., function, {, Name, (, not, #, then, do, ), while, repeat, if, for, local, ;, return, break, $, end, elseif, until, else, }
laststat ;, $, end, elseif, until, then, do, while, repeat, if, for, function, local, Name, (, return, break, else
laststat_s ;, $, end, elseif, until, then, do, while, repeat, if, for, function, local, Name, (, return, break, else
namelist =, in, ,, do, while, repeat, if, for, function, local, Name, (, ;, return, break, $, end, elseif, until, then, else, )
namelist_c =, in, ,, do, while, repeat, if, for, function, local, Name, (, ;, return, break, $, end, elseif, until, then, else, )
parlist )
parlist_s )
prefixexp [, ., :, (, String, {, +, -, *, /, ^, %, .., <, <=, >, >=, ==, ~=, and, or, ], ,, nil, false, true, Number, ..., function, Name, not, #, then, do, ), while, repeat, if, for, local, ;, return, break, $, end, elseif, until, else, }
prefixexp_1 [, ., :, (, String, {, +, -, *, /, ^, %, .., <, <=, >, >=, ==, ~=, and, or, ], ,, nil, false, true, Number, ..., function, Name, not, #, then, do, ), while, repeat, if, for, local, ;, return, break, $, end, elseif, until, else, }
stat do, while, repeat, if, for, function, local, Name, (, ;, return, break, $, end, elseif, until, then, else
stat_c then, else
stat_for do, while, repeat, if, for, function, local, Name, (, ;, return, break, $, end, elseif, until, then, else
stat_local do, while, repeat, if, for, function, local, Name, (, ;, return, break, $, end, elseif, until, then, else
stat_s1 end
stat_s2 do
stat_s3 do, while, repeat, if, for, function, local, Name, (, ;, return, break, $, end, elseif, until, then, else
tableconstructor +, -, *, /, ^, %, .., <, <=, >, >=, ==, ~=, and, or, ], ,, nil, false, true, Number, String, ..., function, {, Name, (, not, #, then, do, ), while, repeat, if, for, local, ;, [, ., :, return, break, $, end, elseif, until, else, }
tableconstructor_s }
unop nil, false, true, Number, String, ..., function, {, Name, (, -, not, #
var ,, =
var_prefixexp ,, =
varlist =
varlist_c =
