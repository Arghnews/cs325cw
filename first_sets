( (
) )
String String
epsilon epsilon
+ +
- -
* *
/ /
^ ^
% %
.. ..
< <
<= <=
> >
>= >=
== ==
~= ~=
and and
or or
; ;
nil nil
false false
true true
Number Number
... ...
, ,
[ [
] ]
= =
Name Name
end end
. .
: :
function function
return return
break break
do do
while while
repeat repeat
until until
if if
then then
for for
local local
elseif elseif
in in
else else
{ {
} }
not not
# #
args (, String, {
args_s epsilon, nil, false, true, Number, String, ..., function, {, Name, (, -, not, #
binop +, -, *, /, ^, %, .., <, <=, >, >=, ==, ~=, and, or
chunk_c epsilon, do, while, repeat, if, for, function, local, Name, (
chunk_s1 ;, epsilon
chunk_s2 epsilon, return, break
exp nil, false, true, Number, String, ..., function, {, Name, (, -, not, #
exp_1 epsilon, +, -, *, /, ^, %, .., <, <=, >, >=, ==, ~=, and, or
explist_c epsilon, nil, false, true, Number, String, ..., function, {, Name, (, -, not, #
field [, Name, nil, false, true, Number, String, ..., function, {, (, -, not, #
fieldlist_c epsilon, ,, ;
fieldlist_s epsilon, ,, ;
fieldsep ,, ;
funcbody (
funcbody_s epsilon, ..., Name
funcname Name
funcname_c ., epsilon
funcname_s :, epsilon
functioncall_prefixexp :, (, String, {
functiondef function
laststat return, break
laststat_s epsilon, nil, false, true, Number, String, ..., function, {, Name, (, -, not, #
namelist Name
namelist_c ,, epsilon
parlist ..., Name
parlist_s ,, epsilon
prefixexp Name, (
prefixexp_1 [, ., :, epsilon, (, String, {
stat do, while, repeat, if, for, function, local, Name, (
stat_c elseif, epsilon
stat_for Name
stat_local function, Name
stat_s1 else, epsilon
stat_s2 ,, epsilon
stat_s3 =, epsilon
tableconstructor {
tableconstructor_s epsilon, [, Name, nil, false, true, Number, String, ..., function, {, (, -, not, #
unop -, not, #
var Name, (
var_prefixexp [, .
varlist_c ,, epsilon
functioncall Name, (
varlist Name, (
explist epsilon, nil, false, true, Number, String, ..., function, {, Name, (, -, not, #
fieldlist [, Name, nil, false, true, Number, String, ..., function, {, (, -, not, #
chunk epsilon, do, while, repeat, if, for, function, local, Name, (, return, break
block epsilon, do, while, repeat, if, for, function, local, Name, (, return, break
